// utils/socket.js
import { Server } from "socket.io";
import usersData from "../data/users.json" with { type: 'json' };
//const usersData = require('../data/users.json');

export const setupSocket = (server) => {
    const io = new Server(server, {
        cors: {
            origin: "http://localhost:3000", // –†–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç—É –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è
            methods: ["GET", "POST"],
        },
    });

    // –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö)
    const users = {};

    io.on("connection", (socket) => {
        console.log("üîå –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è:", socket.id);



        socket.on("join", (username) => {
            const user = usersData.find(user => user.name === username);
            if (user) {
                socket.emit("userAuthenticated", { token: user.token });
            } else {
                socket.emit("error", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }
        });
        /*// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Ö–æ–¥–∏—Ç –≤ —á–∞—Ç
        socket.on("join", (username) => {
            users[socket.id] = username;
            io.emit("userConnected", { username, id: socket.id }); // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö
        });*/

        // –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞—Å—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        socket.on("sendMessage", (data) => {
            io.emit("receiveMessage", data); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        });

        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è
        socket.on("disconnect", () => {
            console.log("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è:", users[socket.id]);
            io.emit("userDisconnected", users[socket.id]); // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö
            delete users[socket.id];
        });
    });

    return io;
};
